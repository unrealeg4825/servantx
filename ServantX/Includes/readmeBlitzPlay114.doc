{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f36\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Book Antiqua;}{\f38\froman\fcharset238\fprq2 Times New Roman CE;}{\f39\froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f41\froman\fcharset161\fprq2 Times New Roman Greek;}{\f42\froman\fcharset162\fprq2 Times New Roman Tur;}{\f43\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f44\froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f45\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f46\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f48\fswiss\fcharset238\fprq2 Arial CE;}{\f49\fswiss\fcharset204\fprq2 Arial Cyr;}{\f51\fswiss\fcharset161\fprq2 Arial Greek;}
{\f52\fswiss\fcharset162\fprq2 Arial Tur;}{\f53\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f54\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f55\fswiss\fcharset186\fprq2 Arial Baltic;}{\f56\fswiss\fcharset163\fprq2 Arial (Vietnamese);}
{\f398\froman\fcharset238\fprq2 Book Antiqua CE;}{\f399\froman\fcharset204\fprq2 Book Antiqua Cyr;}{\f401\froman\fcharset161\fprq2 Book Antiqua Greek;}{\f402\froman\fcharset162\fprq2 Book Antiqua Tur;}{\f405\froman\fcharset186\fprq2 Book Antiqua Baltic;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}{\*\listtable{\list\listtemplateid-884315048\listsimple{\listlevel\levelnfc0\levelnfcn0
\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01*;}{\levelnumbers;}}{\listname ;}\listid-2}}{\*\listoverridetable{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23
\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelold\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 }}\ls1}}{\*\rsidtbl \rsid2568123\rsid3812556\rsid6321939\rsid6562799\rsid7081861\rsid11478401\rsid12124212
\rsid14444750\rsid14817043\rsid14840027\rsid15597578}{\*\generator Microsoft Word 10.0.2627;}{\info{\author John}{\operator John}{\creatim\yr2003\mo9\dy13\hr11\min25}{\revtim\yr2003\mo11\dy21\hr1\min42}{\version12}{\edmins13}{\nofpages7}{\nofwords2627}
{\nofchars14976}{\nofcharsws17568}{\vern16437}}\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind4\viewscale100\nolnhtadjtbl\rsidroot6321939 \fet0\sectd \linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3
\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}
{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain 
\qc \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\fs28\ul\insrsid6321939 BlitzPlay - Lite
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\fs28\insrsid6321939 _________
\par }{\b\f1\fs22\insrsid6321939 BlitzPlay : Network Library for Blitz Basic
\par }{\b\f1\fs20\insrsid6321939 
\par }{\f1\fs20\insrsid6321939 Thank you for trying out BlitzPlay, THE network multiplayer game library specifically made for the Blitz Basic programming language!
\par }{\b\f1\fs20\insrsid6321939 
\par Features:
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0\pararsid6321939 {\f1\fs20\insrsid6321939 
Makes network game design simple!}{\fs20\insrsid6321939 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0\pararsid6321939 {\f1\fs20\insrsid6321939 
Support for up to 255 players!}{\fs20\insrsid6321939 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0\pararsid6321939 {\f1\fs20\insrsid6321939 
Built entirely on UDP, the fastest protocol available!}{\fs20\insrsid6321939 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0\pararsid6321939 {\f1\fs20\insrsid6321939 
Internal functions to deal with: hosting or joining a session, sending/receiving messages, changing game settings, kicking/banning players/ip's, and compressing integers/floats into strings!}{\fs20\insrsid6321939 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0\pararsid6321939 {\f1\fs20\insrsid6321939 
Internally designed for client/server architecture - Broadcast message support!}{\fs20\insrsid6321939 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0\pararsid6321939 {\f1\fs20\insrsid6321939 
Packet loss simulation available for testing + debugging purposes!}{\fs20\insrsid6321939 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0\pararsid6321939 {\f1\fs20\insrsid6321939 
User-defined Timeout Period, which determines how long BlitzPlay will wait before testing a potentially lagged out connection!}{\fs20\insrsid6321939 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0\pararsid6321939 {\f1\fs20\insrsid6321939 
Log File support!}{\fs20\insrsid6321939 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0\pararsid6321939 {\f1\fs20\insrsid6321939 
Now more modular - all globals and functions are suffixed with "BP_"!}{\fs20\insrsid6321939 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0\pararsid6321939 {\f1\fs20\insrsid6321939 
More user-friendly - functions set up to modify attributes, makes it easier to learn how to use BP!}{\fs20\insrsid6321939 
\par }\pard \ql \li360\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin360\itap0 {\fs20\insrsid6321939 
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 If you have any suggestions/questions/comments, let me know!
\par Email: blitzplay@shaw.ca\tab \tab \tab ICQ# 26629354
\par IRC: surreal @ irc.blitzed.org - #blitzbasic + #blitzcoder
\par 
\par }{\b\f1\fs22\insrsid6321939 Licensing Information/Disclaimer
\par 
\par }{\b\f1\fs20\insrsid6321939 \tab }{\f1\fs20\insrsid6321939 
This version of BlitzPlay, unlike previous versions, is provided to you without any request of reimbursement whatsoever! It'd be cool if you made a million bucks off a game made w/ BlitzPlay, and a free copy to say thanks would be cool too *cough* :O) But
 I won't ask for anything..
\par \tab However, keep in mind that I also don't guarantee anything. BlitzPlay - Lite is provided to you as is. I've spent a fair amount of time researching the appropriate stuff to be able to build a library like this, but I'm not going
 to pretend like anything I code is perfect :O) (I have of course tested it a fair bit and have been ironing out bugs here and there, but if you do find something acting funny, let me know!) So if you include this library into your program and the next ti
me you compile it your computer crashes Wall Street and brings it down, orders two pizzas to be delivered to my house on your credit card, then bursts in flames, I won't take the blame!
\par 
\par }{\b\f1\fs22\insrsid6321939 Whats the Difference Between BlitzPlay - Lite and Pro?
\par }{\b\f1\fs20\insrsid6321939 
\par \tab }{\f1\fs20\insrsid6321939 Basically the purpose with BP-Lite was to provide a basic solution to the network simulation. Although robust and fast on its own rights, BP-Lite simply lacks the amount of features and scalability that BP-Pro present}{
\f1\fs20\insrsid14817043 s}{\f1\fs20\insrsid6321939 . BP-Lite will be my way of letting anyone use 
the code to get a feel for what I'm doing, and decide if they even like it enough to plunk down cash for "the rest", so to speak. Thats the other main difference, BP-Lite is free, whereas BP-Pro is }{\f1\fs20\insrsid14817043 50}{\f1\fs20\insrsid6321939 
$ USD. 
\par 
\par Some of the features you can expect to see in BP-Pro are: 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0\pararsid6321939 {\f1\fs20\insrsid6321939 
Ping and PacketLoss tracking for each connection}{\fs20\insrsid6321939 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0\pararsid6321939 {\f1\fs20\insrsid6321939 
Functions for Cubic Splines}{\fs20\insrsid6321939\charrsid6321939 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0\pararsid6321939 {\f1\fs20\insrsid6321939 
Reliable messaging!}{\f1\fs20\insrsid14817043  Broadcasts, Ordered sends!}{\fs20\insrsid6321939 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0\pararsid6321939 {\f1\fs20\insrsid6321939 
No more BlitzPlay imposed player limit of 255.. now up to you!}{\fs20\insrsid6321939\charrsid14817043 
\par {\pntext\pard\plain\f3\fs20\insrsid14817043 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0\pararsid6321939 {\f1\fs20\insrsid14817043 
Configurable File Transfers!}{\fs20\insrsid14817043 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0\pararsid6321939 {\f1\fs20\insrsid6321939 
Will have my GameTime concept implemented. Basically BP will internally maintain an in-sync network clock on all machines that you can check with a call to the GameTime function. All of this will be continually updated and re-sync'd at a rate that you set
, and with 0 additional packets being sent.}{\fs20\insrsid6321939\charrsid14817043 
\par {\pntext\pard\plain\f3\fs20\insrsid14817043 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0\pararsid6321939 {\f1\fs20\insrsid14817043 
Team functions!}{\fs20\insrsid14817043 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0\pararsid6321939 {\f1\fs20\insrsid6321939 
By purchasing BP-Pro you will also be purchasing a permanent license to use it in as many programs/applications as you like, whether commercial or not etc. This also means you'll get free updates whenever I add features or do bug fixes.}{
\fs20\insrsid6321939\charrsid6321939 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin720\itap0\pararsid6321939 {\f1\fs20\insrsid6321939 
And much more..!}{\fs20\insrsid6321939 
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 
\par \tab If you want me to email you the day I have BP-Pro available for sale, let me know at blitzplay@shaw.ca
\par }{\b\f1\fs22\insrsid6321939 
\par How Do I Use BlitzPlay?
\par 
\par }{\f1\fs20\insrsid6321939 \tab It's actually not all that hard, my goal has always been to make network codi
ng as easy as possible to work with. Basically you just Host or Join a session with the appropriate functions, then you can send messages back and forth with BP_UDPMessage. Make sure you always call BP_UpdateNetwork since thats what keeps track of everyth
i
ng once the game is in motion, but aside from that, BP pretty much takes care of most things for you, or offers a function to make it simpler. Its just a matter of learning to use the different functions when the need arises..The other main topic is how t
o
 deal with incoming messages. When BP_UpdateNetwork is called it will input all incoming messages and either deal with the internal ones, or throw the user-defined messages into a message queue defined as a type list. To learn more about the type, look at
 the BP_UpdateNetwork entry.
\par 
\par \tab BlitzPlay will also supply a few external messages when certain events are triggered, such as players joining or leaving. These are as follows:
\par 
\par MsgType\tab MsgData\tab \tab \tab MsgFrom\tab \tab Meaning
\par 255\tab \tab new player's name\tab \tab new player's id\tab \tab Someone has joined the game!
\par 254\tab \tab T/F on if they left, or lagged\tab old player's id\tab \tab Someone left, or lagged out
\par 253\tab \tab T/F on if left, or lagged out\tab old host's id\tab \tab The host left!
\par 252\tab \tab True/False on if banned\tab \tab old player's id\tab \tab Someone got kicked or banned!
\par 
\par \tab Alternatively, and probably easier to read, you can use the constants BP_PLAYERHASJOINED, BP_PLAYERHASLEFT, BP_HOSTHASLEFT, or BP_PLAYERWASKICKED in place of the actual #'s.
\par 
\par \tab I'll explain the functions that are designed for you to use in your code. (The o
nes I won't explain are the internal ones.. you won't have to use those) If there is a variable type (string$,integer%,float#) specifed after the function name, this will represent the sort of variable you can expect them to return. I'm going to list thro
u
gh them alphabetically to make it easier to refer back to.. But as I mentioned earlier, basically just set up a session with BP_HostSession, then BP_JoinSession it with other clients, then use BP_UDPMessage to talk to each other. Make sure you call BP_Upd
a
teNetwork as much as you can, it will keep ping times lower..oh, and whenever a message has been received by BlitzPlay, it will store it in a type list (MsgInfo) containing all the received messages. The way I generally use this is to call BP_UpdateNetwor
k, then do a quick For Each MsgInfo loop to iterate through all the messages. The fields of MsgInfo are: MsgType%, MsgFrom%, and MsgData$.
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_BanIP(ip%)
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Use this function if you for some reason don't want a particular IP to be allowed to join the game.
 This would only be useful if called by the Host.
\par }\pard \ql \li360\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin360\itap0 {\f36\fs20\insrsid6321939 ip% - The integer IP address that you want to ban from the game. See
\par \tab BP_ConvertIP or BP_ConvertDomain to learn how to convert into
\par \tab integer format.}{\f1\fs20\insrsid6321939 
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_ConvertIP%(IP$)
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab This function will take a string IP address and convert it into the integer equivalent.
\par }\pard \ql \li360\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin360\itap0 {\f36\fs20\insrsid6321939 IP$ - The string IP address, in the format "x.x.x.x", for example
\par \tab "999.999.999.999"}{\f1\fs20\insrsid6321939 
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_ConvertDomain%(domain$)
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab This function will take a domain name and convert it into the integer IP equivalent.
\par }\pard \ql \li360\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin360\itap0 {\f1\fs20\insrsid6321939 domain$ - The string domain name, for example "www.google.com"
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_EndSession()
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Used to close down a session. This will close any streams o
pen, as well as alert the other players in the game as to your departure. It will also close down any open log file, and just generally clear out the session information.
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_GetGameType%()
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Returns the GameType variable set by the Host.
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_GetHostID%()
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Returns the Host's ID #.
\par }{\b\i\f1\fs20\insrsid6321939 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_GetHostIP%()
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Returns the Host's integer IP address.
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_GetHostPort%()
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Returns the Host's Port.
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_GetLogFileName$()
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Returns the filename currently in use for logging.
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_GetMaxPlayers%()
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Returns the maximum amount of players this game will allow, set by the Host.
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_GetMyID%()
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Returns the ID # of the local machine.
\par }{\b\i\f1\fs20\insrsid6321939 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_GetMyIP%()
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Returns the local machine's integer IP address.
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_GetMyName$()
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Returns the local player's name.
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_GetMyPort%()
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Returns the port in use on the local machine.
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_GetNumberOfPlayers%()
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Returns the number of players currently in the game.
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_GetPacketsReceived%()
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Returns the total amount of packets received in this session.
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_GetPacketsSent%()
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Returns the total amount of packets sent in this session.
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_GetPlayerName$(ID%)
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Returns the specified Player's Name.
\par }\pard \ql \li360\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin360\itap0 {\f36\fs20\insrsid6321939 ID% - Player's ID # that we're looking for
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_GetTimeoutPeriod%()
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Returns the current TimeoutPeriod, in seconds, as 
set by the host. This is the time the Host will allow before assuming a player has dropped connection.
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_HostSession%(HostName$, MaxPlayers%, GameType%, LocalPort%, TimeoutPeriod%)
\par }\pard \ql \li360\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin360\itap0 {\f1\fs20\insrsid6321939 \tab Basically this function is what sets up the host and prepares him to 
accept connections from other players. It will return true or false on if the port was available, and thus if the session has officially started.
\par }{\f36\fs20\insrsid6321939 HostName$ - A string by which the host can be recognized, (your name!)
\par MaxPlayers% - Number of players allowed in the game. After this # is reached,
\par \tab any new players attempting to connect will be denied.
\par GameType% - Number to describe the type of game. The purpose of this is open
\par \tab for your discretion.
\par LocalPort% - The port # to use on the local machine. This is the port the other
\par \tab players will have to connect to, and can be between 0-65535. I've heard that
\par \tab some of the higher #'s aren't allowed by some ISP's, but I haven't seen it
\par \tab much myself.
\par TimeoutPeriod% - How long, in seconds, you want to give a client before you
\par \tab assume them as having dropped their connection. After half this time has
\par \tab passed, BlitzPlay will automatically test the connection to try to get a
\par \tab response before assuming the worst.}{\f1\fs20\insrsid6321939 
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_IntToStr$ (Num%, StrLen% = 4)
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab 
This function will take any integer and compress it to a string. It is recommended you do this before sending integers back and forth across the network. Please note that if you're going to be sending negative numbers you'll have to either use t
he full 4 bytes, as is the default, or develop some sort of workaround.
\par }\pard \ql \li360\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin360\itap0 {\f36\fs20\insrsid6321939 Num% - The integer you'd like converted to a string
\par StrLen% - How many bytes you'd like the resulting string to be. The default
\par \tab is set to 4, to encompass all possible integer values, however if you know
\par \tab a particular value will never be over, say, 50000, then you could easily get
\par \tab away with sending 2 bytes instead.}{\f1\fs20\insrsid6321939 
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
Function BP_JoinSession% (ClientName$,LocalPort%,}{\b\i\f1\fs20\insrsid15597578 str}{\b\i\f1\fs20\insrsid6321939 HostIp%,HostPort%)
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\b\i\f1\fs20\insrsid6321939 \tab }{\f1\fs20\insrsid6321939 This is the reciprocal function for BP_HostSessio
n, and is fairly straightforward. Use it to join a game already in progress. Always keep in mind that you'll have to check the return from this function to see if a game was successfully joined, or why it wasn't.
\par }\pard \ql \li360\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin360\itap0 {\f36\fs20\insrsid6321939 ClientName$ - String to describe local client's name.
\par LocalPort% - Port # to use on the local machine.
\par }{\f36\fs20\insrsid15597578 Str}{\f36\fs20\insrsid6321939 HostIp}{\f36\fs20\insrsid15597578 $}{\f36\fs20\insrsid6321939  - }{\f36\fs20\insrsid15597578 The Host\rquote s IP address. This can be in the typical \'93192.168.1.1\'94
 sort of format, or a domain name (such as www.domain.com)}{\f36\fs20\insrsid11478401  }{\f36\fs20\insrsid12124212 . It can also be a computername on a LAN.}{\f36\fs20\insrsid6321939 
\par HostPort% - The port that the Host is using. You'll need to know this as well
\par \tab as the IP to connect to the Host.}{\f1\fs20\insrsid6321939 
\par Compare the return from this function against the following constants:
\par }\pard \qc \li360\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin360\itap0 {\b\f1\fs20\insrsid6321939 BP_NOREPLY, BP_IAMBANNED, BP_GAMEISFULL, BP_PORTNOTAVAILABLE, BP_USEABORT, }{\f1\fs20\insrsid6321939 and }{
\b\f1\fs20\insrsid6321939 BP_SUCCESS}{\f1\fs20\insrsid6321939 .
\par }\pard \ql \li360\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin360\itap0 {\f1\fs20\insrsid6321939 They're all pretty much self-explanatory.. BP_PORTNOTAVAILABLE is of course talking about on the local machine.
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_KickID(id%, ban% = False)
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Kick a player out of the game, perhaps as a disciplinary measure. They will be allowed to rejoin if they tr
y, unless you specify otherwise. This function is only available to the Host.
\par }\pard \ql \li360\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin360\itap0 {\f36\fs20\cf1\insrsid6321939 id% - The id of the player you'd like removed.
\par ban% - Set to True or False to specify whether or not to ban this player
\par \tab as well as kicking them. This defaults to False.}{\f1\fs20\insrsid6321939 
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 BP_S
etGameType(GameType%)
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab 
Change the GameType to a different value. The GameType concept is left entirely up to the user to define and use as you see fit. Also only available to the Host. Everyone will be updated on the GameType change.
\par }\pard \ql \li360\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin360\itap0 {\f36\fs20\insrsid6321939 GameType% - The new value to assign as the Game Type.}{\f1\fs20\insrsid6321939 
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_SetMaxPlayers(MaximumPlayers%)
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Function for changing the max players during runtime. Only the Host can modify this option.
\par }\pard \ql \li360\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin360\itap0 {\f36\fs20\insrsid6321939 MaximumPlayers% - New player number limit. Once this limit is reached,
\par \tab any new players will be denied.}{\f1\fs20\insrsid6321939 
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_SetTimeoutPeriod(TimeoutPeriod%)
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab 
Function for changing the Timeout Period during runtime. Only the Host can modify this option. This is the amount of time, in seconds, that the Host will allow to pass before assuming 
that a silent client has actually lost their connection. BP *will* test the connection before dropping them from the game, however.
\par }\pard \ql \li360\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin360\itap0 {\f36\fs20\insrsid6321939 TimeoutPeriod% - New TimeoutPeriod. Remember, its in seconds.}{\f1\fs20\insrsid6321939 
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_SimulatePacketLoss(Odds%)
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Function designed for debugg
ing purposes. Use it to set how many packets, in percent, will actually not be sent. Handy for seeing how well your netcode can perform "under pressure"
\par }\pard \ql \li360\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin360\itap0 {\f36\fs20\insrsid6321939 Odds% - Odds, in percent (%), that any packet sent from this machine will be
\par \tab internally dropped by BP instead of being sent.}{\f1\fs20\insrsid6321939 
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_StartLogFile (FileName$, Append% = True, Automatic% = True)
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab 
Use this function if you want to have BlitzPlay keep track of all packets sent and received within a Log File. You can only have one open Log File at a time.
\par }\pard \ql \li360\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin360\itap0 {\f36\fs20\insrsid6321939 FileName$ - The name of the log file.
\par Append% - True or False on if you want to append to the file specified
\par \tab if it already exists. This will default to true. Otherwise it will simply
\par \tab be overwritten.
\par Automatic% - True or False on if you want BlitzPlay to take care of
\par \tab logging "on its own". This means that every packet will be logged
\par \tab for you and without you having to use BP_UpdateLog. If you
\par \tab want to do more game-specific logging, you may decide to set this
\par \tab to False, so that BP's logging doesn't get in the way. Internal packets
\par \tab will be logged either way.}{\f1\fs20\insrsid6321939 
\par \tab 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_StopLogFile ()
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Stops logging in the logfile created by BP_StartLogFile().
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_StrToInt%(st$)
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Converts back from a string -> integer, probably created with BP_IntToStr()
\par }\pard \ql \li360\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin360\itap0 {\f36\fs20\insrsid6321939 st$ - The string to change back to an integer.}{\f1\fs20\insrsid6321939 
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_StrToFloat#(st$)
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Converts back from a string -> float, probably created with BP_FloatToStr()
\par }\pard \ql \li360\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin360\itap0 {\f36\fs20\insrsid6321939 st$ - The string to change back to a float.}{\f1\fs20\insrsid6321939 
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_UnbanIP(ip%)
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab If for some reason you've had a change of h
eart on an IP that was previously banned with BP_BanIP(), then you can always undo the done with this function.}{\b\i\f1\fs20\insrsid6321939 
\par }\pard \ql \li360\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin360\itap0 {\f36\fs20\insrsid6321939 ip% - Integer IP address of the player that was banned.}{\f1\fs20\insrsid6321939 
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_UpdateNetwork()
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab This is the main function of BlitzPlay, and where most of the in
ternal things are handled. Basically you'll want to keep calling this at least once per game loop. UpdateNetwork will take care of things like receiving messages, dealing with internal messages, checking on dropped connections, and so forth. After a messa
g
e has been received, BlitzPlay will store it in a type list called MsgInfo. The fields of this type are msgData, msgType, msgFrom, and will contain the details about the message (sender id # and the message type), as well as the actual message contents it
self (msgData$)
\par 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_UDPMessage(msgTarget%, msgType%, msgData$)
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Use this to send a packet to another player.}{\b\i\f1\fs20\insrsid6321939 
\par }\pard \ql \li360\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin360\itap0 {\f36\fs20\insrsid6321939 msgTarget% - Which player # to send it to. A msgTarget of 0 implies a
\par \tab broadcast, and will be sent to all other players in the game.
\par msgType% - Which type will this message be. This can be from 0-230.
\par msgData$ - What the actual packet contents will be. This can be anything
\par \tab from player updates to chat packets to whatever you want. This part is
\par \tab up to you.}{\f1\fs20\insrsid6321939 
\par }\pard \ql \li0\ri0\nowidctlpar{\*\pn \pnlvlcont\ilvl0\ls0\pnrnot0\pndec }\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 
\par {\pntext\pard\plain\f3\fs20\insrsid6321939 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-180\li180\ri0\nowidctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pnf3 {\pntxtb \'b7}}\faauto\ls1\rin0\lin180\itap0\pararsid6321939 {\b\i\f1\fs20\insrsid6321939 
BP_UpdateLog(txt$)
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid6321939 \tab Althoug
h BP can keep track of logging for you, if you'd like to do it manually, you can use this function to add an entry to the log file. This command will work regardless of if you had specified the Automatic variable when calling BP_StartLogFile()}{
\b\i\f1\fs20\insrsid6321939 
\par }\pard \ql \li360\ri0\nowidctlpar\faauto\rin0\lin360\itap0 {\f36\fs20\insrsid6321939 txt$ - The text to be added to the file.}{\f1\fs20\insrsid6321939 
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f1\fs22\insrsid6321939 
\par 
\par Version History
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid14444750 {\b\f1\fs20\insrsid14444750 \tab }{\b\f1\fs20\ul\insrsid14444750 V 1.14}{\f1\fs20\insrsid14444750 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid14444750 {\f1\fs20\insrsid14444750   Someone reported a bug where BP would sometimes timeout for no apparent reason. This has been resolved.}{\f1\fs20\insrsid2568123  (Thanks Rottbott!)}{
\f1\fs20\insrsid14444750 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f1\fs22\insrsid14444750 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid6562799 {\b\f1\fs20\insrsid6562799 \tab }{\b\f1\fs20\ul\insrsid6562799 V 1.}{\b\f1\fs20\ul\insrsid14444750 1}{\b\f1\fs20\ul\insrsid6562799 3}{\f1\fs20\insrsid6562799 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid6562799 {\f1\fs20\insrsid6562799   Another small bugfix, BP_JoinSession still wasn\rquote t closing down it\rquote s port properly, but that\rquote 
s finally been resolved, as well as BP_My_IP now returns a string of the Dotted IP instead of the integer value.
\par  -BP_JoinSession also now takes a string for the HostIP parameter, similar to in BP-Pro.}{\f1\fs20\insrsid3812556  This is so that you can use a string inputted from the user easily.}{\f1\fs20\insrsid6562799 
\par  -BP_JoinSession and BP_HostSession now call for the local IP (w/ BP_My_IP) instead of just initializing it right away}{\f1\fs20\insrsid14840027  at the top of the lib}{\f1\fs20\insrsid6562799 . I\rquote 
ve set it up this way to prevent people from getting the \'93connect to the internet\'94 dialog box from running a BlitzPlay prog, at least until trying to set up or join a session.  
\par }{\f1\fs20\insrsid7081861  -BP_JoinSession has a new return constant: BP_INVALIDHOSTIP. This is returned if you try to call the function w/ a blank IP string, or a string that doesn\rquote t result in a valid ip.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid6562799 {\f1\fs20\insrsid6562799 
\par }{\b\f1\fs20\insrsid6562799 \tab }{\b\f1\fs20\ul\insrsid6562799 V 1.}{\b\f1\fs20\ul\insrsid14444750 1}{\b\f1\fs20\ul\insrsid6562799 2}{\f1\fs20\insrsid6562799 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid6562799 {\f1\fs20\insrsid6562799 
  Ooops! Another bug fix update. BlitzPlay wasn't closing down the port it opened if a connection attempt was unsuccessful. I made this fix awhile ago to BPP, but guess overlooked doing it for BPL as well, so here it is!
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid6321939 
\par \tab }{\b\f1\fs20\ul\insrsid6321939 V 1.}{\b\f1\fs20\ul\insrsid14444750 1}{\f1\fs20\insrsid6321939 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid6321939 
  I made a bugfix or two, plus added the constants BP_PLAYERHASJOINED, BP_PLAYERHASLEFT, BP_HOSTHASLEFT, and BP_PLAYERWASKICKED. These constants can be used in place of the hardcoded message types for their equivalents.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f1\fs20\insrsid6321939 
\par \tab }{\b\f1\fs20\ul\insrsid6321939 V 1.0}{\f1\fs20\insrsid6321939 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid6321939   The initial release of B
litzPlay - Lite. I'm pretty excited about this, simply because I want to see if/how well its received by the Blitz Basic community. Its been a long time coming for an updated version of BlitzPlay, and although this isn't BlitzPlay - Pro, it will hopefully
 
be enough to hold people over! :O) I've fixed up a number of bugs that were lingering from the old BP days, and have even switched up a few way of doing things that hadn't brought about bugs yet, but might have lead to some eventually..This is the next bi
g step for BlitzPlay, and it seems to be getting easier along the way as I get experience under my belt :O) Until next time..
\par }}